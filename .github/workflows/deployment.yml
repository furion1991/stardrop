name: Build and Deploy
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set Image Tag
        id: tag
        run: |
          echo "TAG=prod" >> $GITHUB_ENV
      - name: Build and push stardrop front image
        run: |
          docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/stardrop_front_app:${{ env.TAG }}-${{ github.sha }} -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/stardrop_front_app:${{ env.TAG }}-${{ github.sha }}
  

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set Image Tag
        id: tag
        run: echo "TAG=prod" >> $GITHUB_ENV

      - name: Deploy to remote server via SSH
        uses: appleboy/ssh-action@v1.0.3
        env:
          GIT_SHA_FRONT: ${{ env.TAG }}-${{ github.sha }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          envs: GIT_SHA_FRONT
          script: |
            cd stardrop
            # Обновляем только GIT_SHA_FRONT, НЕ ТРОГАЯ GIT_SHA
            sed -i '/^GIT_SHA_FRONT=/d' .env && echo "GIT_SHA_FRONT=${GIT_SHA_FRONT}" >> .env
            docker compose down
            docker system prune -f --all
            docker compose pull
            docker compose up -d
